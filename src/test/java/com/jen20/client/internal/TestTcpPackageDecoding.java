package com.jen20.client.internal;

import io.netty.buffer.ByteBuf;
import io.netty.buffer.Unpooled;
import io.netty.channel.embedded.EmbeddedChannel;
import io.netty.handler.codec.LengthFieldBasedFrameDecoder;
import org.junit.Test;

import java.nio.ByteOrder;
import java.util.UUID;

import static org.junit.Assert.*;
import static com.jen20.client.internal.TcpPackageEquality.*;

public class TestTcpPackageDecoding {

    @Test
    public void TestTcpPackageDecoding1() {
        //Input captured via WireShark - (4 length prefix bytes + 507 data bytes)
        byte[] inputData = new byte[] {
                (byte)0xfb, (byte)0x01, (byte)0x00, (byte)0x00, (byte)0x82, (byte)0x00, (byte)0x6a, (byte)0x41, (byte)0xf0, (byte)0xa7, (byte)0x6a, (byte)0xb2, (byte)0xd2, (byte)0x40, (byte)0xa8, (byte)0x83, (byte)0x27, (byte)0x55, (byte)0xbd, (byte)0x07, (byte)0x75, (byte)0x68, (byte)0x0a, (byte)0x24, (byte)0x39, (byte)0x30, (byte)0x66, (byte)0x63, (byte)0x38, (byte)0x36, (byte)0x61, (byte)0x39, (byte)0x2d, (byte)0x37, (byte)0x33, (byte)0x66, (byte)0x32, (byte)0x2d, (byte)0x34, (byte)0x32, (byte)0x38, (byte)0x38, (byte)0x2d, (byte)0x38, (byte)0x35, (byte)0x32, (byte)0x32, (byte)0x2d, (byte)0x32, (byte)0x62, (byte)0x34, (byte)0x34, (byte)0x61, (byte)0x30, (byte)0x36, (byte)0x66, (byte)0x30, (byte)0x64, (byte)0x39, (byte)0x36, (byte)0x10, (byte)0xfe, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0xff, (byte)0x01, (byte)0x1a, (byte)0xb3, (byte)0x03, (byte)0x0a, (byte)0x10, (byte)0xb3, (byte)0xd8, (byte)0x92, (byte)0x0e, (byte)0xab, (byte)0x5b, (byte)0xc5, (byte)0x4b, (byte)0xb0, (byte)0xd3, (byte)0xd9, (byte)0xe6, (byte)0xae, (byte)0x3d, (byte)0x03, (byte)0x25, (byte)0x12, (byte)0x12, (byte)0x54, (byte)0x61, (byte)0x6b, (byte)0x65, (byte)0x53, (byte)0x6f, (byte)0x6d, (byte)0x65, (byte)0x53, (byte)0x70, (byte)0x61, (byte)0x63, (byte)0x65, (byte)0x45, (byte)0x76, (byte)0x65, (byte)0x6e, (byte)0x74, (byte)0x18, (byte)0x01, (byte)0x20, (byte)0x00, (byte)0x2a, (byte)0x8e, (byte)0x02, (byte)0x7b, (byte)0x20, (byte)0x22, (byte)0x44, (byte)0x41, (byte)0x54, (byte)0x41, (byte)0x22, (byte)0x20, (byte)0x3a, (byte)0x20, (byte)0x22, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x2a, (byte)0x22, (byte)0x7d, (byte)0x32, (byte)0x76, (byte)0x7b, (byte)0x20, (byte)0x22, (byte)0x4d, (byte)0x45, (byte)0x54, (byte)0x41, (byte)0x44, (byte)0x41, (byte)0x54, (byte)0x41, (byte)0x22, (byte)0x20, (byte)0x3a, (byte)0x20, (byte)0x22, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x24, (byte)0x22, (byte)0x7d, (byte)0x20, (byte)0x00
        };
        assertEquals(511, inputData.length);
        ByteBuf input = Unpooled.wrappedBuffer(inputData);

        EmbeddedChannel channel = new EmbeddedChannel(
                new LengthFieldBasedFrameDecoder(ByteOrder.LITTLE_ENDIAN, 64*1024*1024, 0, 4, 0, 4, true),
                new TcpPackageDecoder()
        );
        channel.writeInbound(input);
        channel.finish();

        TcpPackage actual = (TcpPackage)channel.readInbound();

        TcpPackage expected = new TcpPackage(TcpCommand.WRITE_EVENTS, TcpFlag.NONE, UUID.fromString("a7f0416a-b26a-40d2-a883-2755bd077568"),
                null, null, Unpooled.wrappedBuffer(inputData, 22, 489));

        tcpPackagesAreEquivalent(expected, actual);
    }
}
